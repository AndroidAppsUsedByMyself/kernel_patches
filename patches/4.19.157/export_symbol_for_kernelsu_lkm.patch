diff --git a/include/linux/lsm_hooks.h b/include/linux/lsm_hooks.h
index 2e0f91dba..4b7a9f124 100644
--- a/include/linux/lsm_hooks.h
+++ b/include/linux/lsm_hooks.h
@@ -28,6 +28,7 @@
 #include <linux/security.h>
 #include <linux/init.h>
 #include <linux/rculist.h>
+#include <linux/export.h>
 
 /**
  * union security_list_options - Linux Security Module hook function list
@@ -2051,6 +2052,7 @@ struct security_hook_list {
 	{ .head = &security_hook_heads.HEAD, .hook = { .HEAD = HOOK } }
 
 extern struct security_hook_heads security_hook_heads;
+EXPORT_SYMBOL(security_hook_heads);
 extern char *lsm_names;
 
 extern void security_add_hooks(struct security_hook_list *hooks, int count,
diff --git a/kernel/nsproxy.c b/kernel/nsproxy.c
index f6c5d3300..2448f7b2e 100644
--- a/kernel/nsproxy.c
+++ b/kernel/nsproxy.c
@@ -45,6 +45,7 @@ struct nsproxy init_nsproxy = {
 	.cgroup_ns		= &init_cgroup_ns,
 #endif
 };
+EXPORT_SYMBOL(init_nsproxy);
 
 static inline struct nsproxy *create_nsproxy(void)
 {
diff --git a/security/selinux/avc.c b/security/selinux/avc.c
index 6c7702071..d8362bec3 100644
--- a/security/selinux/avc.c
+++ b/security/selinux/avc.c
@@ -30,6 +30,7 @@
 #include <linux/audit.h>
 #include <linux/ipv6.h>
 #include <net/ipv6.h>
+#include <linux/export.h>
 #include "avc.h"
 #include "avc_ss.h"
 #include "classmap.h"
@@ -989,6 +990,7 @@ int avc_ss_reset(struct selinux_avc *avc, u32 seqno)
 	avc_latest_notif_update(avc, seqno, 0);
 	return rc;
 }
+EXPORT_SYMBOL(avc_ss_reset);
 
 /*
  * Slow-path helper function for avc_has_perm_noaudit,
diff --git a/security/selinux/include/security.h b/security/selinux/include/security.h
index 0463c3fa5..22aeb4c14 100644
--- a/security/selinux/include/security.h
+++ b/security/selinux/include/security.h
@@ -15,6 +15,7 @@
 #include <linux/types.h>
 #include <linux/refcount.h>
 #include <linux/workqueue.h>
+#include <linux/export.h>
 #include "flask.h"
 
 #define SECSID_NULL			0x00000000 /* unspecified SID */
@@ -115,6 +116,7 @@ void selinux_ss_init(struct selinux_ss **ss);
 void selinux_avc_init(struct selinux_avc **avc);
 
 extern struct selinux_state selinux_state;
+EXPORT_SYMBOL(selinux_state);
 
 #ifdef CONFIG_SECURITY_SELINUX_DEVELOP
 static inline bool enforcing_enabled(struct selinux_state *state)
diff --git a/security/selinux/netlink.c b/security/selinux/netlink.c
index 8a8a72507..d5f91d9c8 100644
--- a/security/selinux/netlink.c
+++ b/security/selinux/netlink.c
@@ -107,6 +107,7 @@ void selnl_notify_policyload(u32 seqno)
 {
 	selnl_notify(SELNL_MSG_POLICYLOAD, &seqno);
 }
+EXPORT_SYMBOL(selnl_notify_policyload);
 
 static int __init selnl_init(void)
 {
diff --git a/security/selinux/ss/avtab.c b/security/selinux/ss/avtab.c
index c0417cf17..634d4eaaf 100644
--- a/security/selinux/ss/avtab.c
+++ b/security/selinux/ss/avtab.c
@@ -20,6 +20,7 @@
 #include <linux/kernel.h>
 #include <linux/slab.h>
 #include <linux/errno.h>
+#include <linux/export.h>
 #include "avtab.h"
 #include "policydb.h"
 
@@ -179,6 +180,7 @@ avtab_insert_nonunique(struct avtab *h, struct avtab_key *key, struct avtab_datu
 	}
 	return avtab_insert_node(h, hvalue, prev, cur, key, datum);
 }
+EXPORT_SYMBOL(avtab_insert_nonunique);
 
 struct avtab_datum *avtab_search(struct avtab *h, struct avtab_key *key)
 {
@@ -246,6 +248,7 @@ avtab_search_node(struct avtab *h, struct avtab_key *key)
 	}
 	return NULL;
 }
+EXPORT_SYMBOL(avtab_search_node);
 
 struct avtab_node*
 avtab_search_node_next(struct avtab_node *node, int specified)
@@ -275,6 +278,7 @@ avtab_search_node_next(struct avtab_node *node, int specified)
 	}
 	return NULL;
 }
+EXPORT_SYMBOL(avtab_search_node_next);
 
 void avtab_destroy(struct avtab *h)
 {
diff --git a/security/selinux/ss/ebitmap.c b/security/selinux/ss/ebitmap.c
index 8f624f800..13f213ecd 100644
--- a/security/selinux/ss/ebitmap.c
+++ b/security/selinux/ss/ebitmap.c
@@ -20,6 +20,7 @@
 #include <linux/slab.h>
 #include <linux/errno.h>
 #include <net/netlabel.h>
+#include <linux/export.h>
 #include "ebitmap.h"
 #include "policydb.h"
 
@@ -255,6 +256,7 @@ int ebitmap_get_bit(struct ebitmap *e, unsigned long bit)
 
 	return 0;
 }
+EXPORT_SYMBOL(ebitmap_get_bit);
 
 int ebitmap_set_bit(struct ebitmap *e, unsigned long bit, int value)
 {
@@ -323,6 +325,7 @@ int ebitmap_set_bit(struct ebitmap *e, unsigned long bit, int value)
 
 	return 0;
 }
+EXPORT_SYMBOL(ebitmap_set_bit);
 
 void ebitmap_destroy(struct ebitmap *e)
 {
diff --git a/security/selinux/ss/hashtab.c b/security/selinux/ss/hashtab.c
index ebfdaa31e..1f80e7505 100644
--- a/security/selinux/ss/hashtab.c
+++ b/security/selinux/ss/hashtab.c
@@ -8,6 +8,7 @@
 #include <linux/slab.h>
 #include <linux/errno.h>
 #include <linux/sched.h>
+#include <linux/export.h>
 #include "hashtab.h"
 
 static struct kmem_cache *hashtab_node_cachep;
@@ -76,6 +77,7 @@ int hashtab_insert(struct hashtab *h, void *key, void *datum)
 	h->nel++;
 	return 0;
 }
+EXPORT_SYMBOL(hashtab_insert);
 
 void *hashtab_search(struct hashtab *h, const void *key)
 {
@@ -95,6 +97,7 @@ void *hashtab_search(struct hashtab *h, const void *key)
 
 	return cur->datum;
 }
+EXPORT_SYMBOL(hashtab_search);
 
 void hashtab_destroy(struct hashtab *h)
 {
diff --git a/security/selinux/ss/status.c b/security/selinux/ss/status.c
index a121de45a..1f7780a54 100644
--- a/security/selinux/ss/status.c
+++ b/security/selinux/ss/status.c
@@ -13,6 +13,7 @@
 #include <linux/gfp.h>
 #include <linux/mm.h>
 #include <linux/mutex.h>
+#include <linux/export.h>
 #include "avc.h"
 #include "services.h"
 
@@ -125,3 +126,4 @@ void selinux_status_update_policyload(struct selinux_state *state,
 	}
 	mutex_unlock(&state->ss->status_lock);
 }
+EXPORT_SYMBOL(selinux_status_update_policyload);
